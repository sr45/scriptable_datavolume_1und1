//data usage status of 1&1 mobile
//inspiered by "Corona-Ampel Berlin | www.berlin.de"
//
//author: sr45

var usedvolume = 0
var maxvolume = 0
var lastdate = ""

let cc1 = Color.white()
let cc2 = Color.white()
let widget = new ListWidget()
let nextRefresh = Date.now() + 1000*30 // add 30 second to now
const spc = 3
let hourNow = new Date().getHours()

widget.setPadding(10,10,10,10)
widget.refreshAfterDate = new Date(nextRefresh)

//Define nighttime (19h - 7h) for styling changes
var nightTime = (hourNow >= 19 || hourNow < 7)

//Title text
let titleTxt = widget.addText("1&1 Daten")
titleTxt.font= Font.boldSystemFont(18)
titleTxt.centerAlignText()
widget.addSpacer(spc)


//Value text
let vlFnt = Font.semiboldSystemFont(13)

//Subtitle text
let ptFnt = Font.systemFont(10)
let ptCol

//Backgrund- & text colors
if (nightTime) {
 titleTxt.textColor = Color.lightGray()
 ptCol = Color.gray()
 const gradient = new LinearGradient()
 gradient.locations = [0, 1]
 gradient.colors = [
   new Color("192331"),
   new Color("222222")]
 widget.backgroundGradient = gradient
}
else {
 titleTxt.textColor = Color.white()
 ptCol = Color.lightGray()
const gradient = new LinearGradient()
 gradient.locations = [0, 1]
 gradient.colors = [
   new Color("192331"),
   new Color("222222")]
 widget.backgroundGradient = gradient
}
await loadSite()
if (!config.runsInWidget) {
 widget.presentSmall() 
}

Script.setWidget(widget)
Script.complete()

function readData() {
   let logManager = FileManager.iCloud()
   const logPath = logManager.joinPath(logManager.documentsDirectory(), "1und1data.txt")
   logManager.downloadFileFromiCloud(logPath)
   if (!logManager.fileExists(logPath)){
       writeData()
   }
   var filecontent = logManager.readString(logPath)
   data = filecontent.split(",")
   usedvolume = data[0]
   maxvolume = data[1]
   lastdate = data[2]
}

function writeData() {
  var d = new Date()
lastdate = [d.getMonth()+1,
               d.getDate(),
               d.getFullYear()].join('/')+' '+
              [d.getHours(),
               d.getMinutes(),
               d.getSeconds()].join(':');
              
   let logManager = FileManager.iCloud()
   const logPath = logManager.joinPath(logManager.documentsDirectory(), "1und1data.txt")
   logManager.downloadFileFromiCloud(logPath)
   logManager.writeString(logPath, "" + usedvolume + "," + maxvolume + "," + lastdate)
}

async function loadSite() {
 
 let url='https://www.1und1.de/mobile-center'
 let wbv = new WebView()
 await wbv.loadURL(url)

 //Check url wich is set if WLAN is turned of
 let js = `
   var arr = new Array()

   if (document.URL == "https://mobile.kundenshop.1und1.de/mobile-center") {
     arr.push("false")
   } else {
     arr.push("true")
   }

   JSON.stringify(arr)
 `
 let res = await wbv.evaluateJavaScript(js)
 let wlan = JSON.parse(res)

 if (wlan[0]=="true") {
    readData()
    let tx5 = widget.addText("!im WLAN kein update!")
     tx5.centerAlignText()
     tx5.font = Font.semiboldSystemFont(8)
     tx5.textColor = Color.red()
    widget.addSpacer(spc)
  } else {
    //javasript to grab data from the 1&1 website (mobile-center)
    let jsc = `
       var arr = new Array()

       var used = document
         .getElementById("currentHighSpeedVolumeCount")
         .innerText
       arr.push(used)

       var volume = document
         .getElementById("maxHighSpeedVolumeCount")
         .innerText
       arr.push(volume)

       JSON.stringify(arr)
   `
   //Run the javascript
   let jsn = await wbv.evaluateJavaScript(jsc)
   //Parse the grabbed values into a variable
   let val = JSON.parse(jsn) 
   //Remove everything not needed from the tag content
   usedvolume = val[0].replaceAll(" ", "").replaceAll("\n","").trim().replace("MB","")
   maxvolume = val[1].replaceAll(" ", "").replaceAll("\n","").trim().replace("MB","")
   writeData()
  
  let tx5 = widget.addText("aktuell")
     tx5.centerAlignText()
     tx5.font = Font.semiboldSystemFont(8)
     tx5.textColor = Color.green()
    widget.addSpacer(spc)
 }

 
//   Benutztes Volumen
 tx2 = widget.addText(usedvolume + " MB")
 tx2.leftAlignText()
 tx2.font = vlFnt
 tx2.textColor = ptCol
  

  let tx1 = widget.addText("Verbraucht")
  
  if (maxvolume - usedvolume < 300) {
    tx1.textColor = Color.red() 
  } else {
    tx1.textColor = ptCol
  } 
  tx1.font= ptFnt
  tx1.leftAlignText()
  
  widget.addSpacer(spc)

   //VerfÃ¼gbares Volumen
     tx4 = widget.addText(maxvolume + " MB")
     tx4.leftAlignText()
     tx4.font = vlFnt
     tx4.textColor = ptCol
  

  let tx3 = widget.addText("Monatliches Volumen")
  tx3.textColor  = ptCol
  tx3.font= ptFnt
  tx3.leftAlignText()
  
  widget.addSpacer(spc)
  
  let tx7= widget.addText("letzte Aktualisierung: "+lastdate)
  tx7.textColor  = ptCol
  tx7.font= Font.semiboldSystemFont(8)
  tx7.centerAlignText()
  
}